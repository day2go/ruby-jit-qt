; ModuleID = 'metalize/jit_types.cpp'
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"
target triple = "i386-pc-linux-gnu"

%class.YaQObject = type { %class.QObject }
%class.QObject = type { i32 (...)**, %class.QScopedPointer }
%class.QScopedPointer = type { %class.QObjectData* }
%class.QObjectData = type { i32 (...)**, %class.QObject*, %class.QObject*, %class.QList, i32, i32, %struct.QDynamicMetaObjectData* }
%class.QList = type { %union.anon }
%union.anon = type { %struct.QListData }
%struct.QListData = type { %"struct.QListData::Data"* }
%"struct.QListData::Data" = type { %"class.QtPrivate::RefCount", i32, i32, i32, [1 x i8*] }
%"class.QtPrivate::RefCount" = type { %class.QBasicAtomicInteger }
%class.QBasicAtomicInteger = type { i32 }
%struct.QDynamicMetaObjectData = type opaque
%class.YaQString = type { %class.QString }
%class.QString = type { %struct.QTypedArrayData* }
%struct.QTypedArrayData = type { %struct.QArrayData }
%struct.QArrayData = type { %"class.QtPrivate::RefCount", i32, i32, i32 }
%class.YaQByteArray = type { %class.QByteArray }
%class.QByteArray = type { %struct.QTypedArrayData.0* }
%struct.QTypedArrayData.0 = type { %struct.QArrayData }
%class.YaQThread = type { %class.QThread }
%class.QThread = type { %class.QObject }
%class.YaQCoreApplication = type { %class.QCoreApplication }
%class.QCoreApplication = type { %class.QObject }
%class.YaQChar = type { %class.QChar }
%class.QChar = type { i16 }
%class.YaQTimer = type { %class.QTimer.base, [3 x i8] }
%class.QTimer.base = type <{ %class.QObject, i32, i32, i32, i8 }>
%class.YaQDateTime = type { %class.QDateTime }
%class.QDateTime = type { %class.QExplicitlySharedDataPointer }
%class.QExplicitlySharedDataPointer = type { %class.QDateTimePrivate* }
%class.QDateTimePrivate = type opaque
%class.YaQUrl = type { %class.QUrl }
%class.QUrl = type { %class.QUrlPrivate* }
%class.QUrlPrivate = type opaque
%class.YaQFile = type { %class.QFile }
%class.QFile = type { %class.QFileDevice }
%class.QFileDevice = type { %class.QIODevice }
%class.QIODevice = type { %class.QObject }
%class.YaQHostAddress = type { %class.QHostAddress }
%class.QHostAddress = type { %class.QScopedPointer.1 }
%class.QScopedPointer.1 = type { %class.QHostAddressPrivate* }
%class.QHostAddressPrivate = type opaque
%class.YaQAbstractSocket = type { %class.QAbstractSocket }
%class.QAbstractSocket = type { %class.QIODevice }
%class.YaQTcpSocket = type { %class.QTcpSocket }
%class.QTcpSocket = type { %class.QAbstractSocket }
%class.YaQTcpServer = type { %class.QTcpServer }
%class.QTcpServer = type { %class.QObject }
%class.YaQGuiApplication = type { %class.QGuiApplication }
%class.QGuiApplication = type { %class.QCoreApplication }
%class.YaQBitmap = type { %class.QBitmap }
%class.QBitmap = type { %class.QPixmap }
%class.QPixmap = type { %class.QPaintDevice, %class.QExplicitlySharedDataPointer.2 }
%class.QPaintDevice = type { i32 (...)**, i16, %class.QPaintDevicePrivate* }
%class.QPaintDevicePrivate = type opaque
%class.QExplicitlySharedDataPointer.2 = type { %class.QPlatformPixmap* }
%class.QPlatformPixmap = type opaque
%class.YaQIcon = type { %class.QIcon }
%class.QIcon = type { %class.QIconPrivate* }
%class.QIconPrivate = type opaque
%class.YaQWidget = type { %class.QWidget }
%class.QWidget = type { %class.QObject, %class.QPaintDevice, %class.QWidgetData* }
%class.QWidgetData = type { i32, i32, %class.QFlags, i32, %class.QRect, %class.QPalette, %class.QFont, %class.QRect }
%class.QFlags = type { i32 }
%class.QPalette = type { %class.QPalettePrivate*, %union.anon.3 }
%class.QPalettePrivate = type opaque
%union.anon.3 = type { %"struct.QPalette::Data" }
%"struct.QPalette::Data" = type { i32 }
%class.QFont = type { %class.QExplicitlySharedDataPointer.4, i32 }
%class.QExplicitlySharedDataPointer.4 = type { %class.QFontPrivate* }
%class.QFontPrivate = type opaque
%class.QRect = type { i32, i32, i32, i32 }
%class.YaQMainWindow = type { %class.QMainWindow }
%class.QMainWindow = type { %class.QWidget }

; Function Attrs: nounwind
define void @_Z16__keep_jit_typesv() #0 {
  %v0 = alloca i8*, align 4
  store i8* null, i8** %v0, align 4
  %1 = load i8** %v0, align 4
  %2 = bitcast i8* %1 to %class.YaQObject*
  %3 = load i8** %v0, align 4
  %4 = bitcast i8* %3 to %class.YaQString*
  %5 = load i8** %v0, align 4
  %6 = bitcast i8* %5 to %class.YaQByteArray*
  %7 = load i8** %v0, align 4
  %8 = bitcast i8* %7 to %class.YaQThread*
  %9 = load i8** %v0, align 4
  %10 = bitcast i8* %9 to %class.YaQCoreApplication*
  %11 = load i8** %v0, align 4
  %12 = bitcast i8* %11 to %class.YaQChar*
  %13 = load i8** %v0, align 4
  %14 = bitcast i8* %13 to %class.YaQTimer*
  %15 = load i8** %v0, align 4
  %16 = bitcast i8* %15 to %class.YaQDateTime*
  %17 = load i8** %v0, align 4
  %18 = bitcast i8* %17 to %class.YaQUrl*
  %19 = load i8** %v0, align 4
  %20 = bitcast i8* %19 to %class.YaQFile*
  %21 = load i8** %v0, align 4
  %22 = bitcast i8* %21 to %class.YaQHostAddress*
  %23 = load i8** %v0, align 4
  %24 = bitcast i8* %23 to %class.YaQAbstractSocket*
  %25 = load i8** %v0, align 4
  %26 = bitcast i8* %25 to %class.YaQTcpSocket*
  %27 = load i8** %v0, align 4
  %28 = bitcast i8* %27 to %class.YaQTcpServer*
  %29 = load i8** %v0, align 4
  %30 = bitcast i8* %29 to %class.YaQGuiApplication*
  %31 = load i8** %v0, align 4
  %32 = bitcast i8* %31 to %class.YaQBitmap*
  %33 = load i8** %v0, align 4
  %34 = bitcast i8* %33 to %class.YaQIcon*
  %35 = load i8** %v0, align 4
  %36 = bitcast i8* %35 to %class.YaQWidget*
  %37 = load i8** %v0, align 4
  %38 = bitcast i8* %37 to %class.YaQMainWindow*
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
